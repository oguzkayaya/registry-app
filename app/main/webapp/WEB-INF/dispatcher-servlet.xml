<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:jpa="http://www.springframework.org/schema/data/jpa"
       xmlns:jdbc="http://www.springframework.org/schema/jdbc"

       xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx-2.5.xsd
        http://www.springframework.org/schema/data/jpa
        http://www.springframework.org/schema/data/jpa/spring-jpa.xsd
        http://www.springframework.org/schema/jdbc
        http://www.springframework.org/schema/jdbc/spring-jdbc.xsd">


    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix">
            <value>/WEB-INF/views/</value>
        </property>
        <property name="suffix">
            <value>.jsp</value>
        </property>
    </bean>

    <context:component-scan base-package="org.ok"/>

    <context:annotation-config/>

    <!-- Css file -->
    <mvc:resources mapping="/resources/**" location="/resources/"/>

    <!-- Services -->
    <bean id="entryService" class="org.ok.service.EntryService">
        <constructor-arg ref="entryRepository"></constructor-arg>
    </bean>

    <!-- Controllers -->
    <bean name="/" class="org.ok.controller.HomePageController">
        <property name="supportedMethods" value="GET"></property>
    </bean>
    <bean name="/new" class="org.ok.controller.FormPageController">
        <property name="supportedMethods" value="GET"></property>
    </bean>
    <bean name="/save" class="org.ok.controller.SaveController">
        <property name="supportedMethods" value="POST"></property>
        <constructor-arg ref="entryService"></constructor-arg>
    </bean>
    <bean name="/all" class="org.ok.controller.GetEntriesController">
        <property name="supportedMethods" value="GET"></property>
        <constructor-arg ref="entryService"></constructor-arg>
    </bean>


    <!-- Use in-memory embedded H2 database -->
    <jdbc:embedded-database id="dataSource" type="H2">
    </jdbc:embedded-database>


    <!-- Use MySQL database
        <bean id="dataSource"
              class="org.springframework.jdbc.datasource.DriverManagerDataSource">
            <property name="driverClassName"
                      value="com.mysql.jdbc.Driver"/>
            <property name="url"
                      value="jdbc:mysql://<database-schema-url>"/>
            <property name="username" value="<username>"/>
            <property name="password" value="<password>"/>
        </bean>
   -->
    <!-- This produces a container-managed EntityManagerFactory; rather than
         application-managed EntityManagerFactory as in case of LocalEntityManagerFactoryBean -->
    <bean id="entityManagerFactoryBean"
          class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <!-- This makes /META-INF/persistence.xml is no longer necessary -->
        <property name="packagesToScan" value="org.ok.model"/>
        <!-- JpaVendorAdapter implementation for Hibernate EntityManager. Exposes
            Hibernate's persistence provider and EntityManager extension interface -->
        <property name="jpaVendorAdapter">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"/>
        </property>
        <property name="jpaProperties">
            <props>
                <prop key="hibernate.show_sql">false</prop>
                <prop key="hibernate.hbm2ddl.auto">update</prop>
                <prop key="hibernate.dialect">org.hibernate.dialect.H2Dialect</prop>
            </props>
        </property>
    </bean>

    <!-- This transaction manager is appropriate for applications that use a
          single JPA EntityManagerFactory for transactional data access. JTA (usually
          through JtaTransactionManager) is necessary for accessing multiple transactional
          resources within the same transaction. -->
    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactoryBean"/>
    </bean>


    <!-- responsible for registering the necessary Spring components that power
		annotation-driven transaction management; such as when @Transactional methods
		are invoked -->
    <tx:annotation-driven/>

    <!-- Configure Spring Data JPA and set the base package of the java.repository
		interfaces -->
    <jpa:repositories base-package="org.ok.repository"
                      entity-manager-factory-ref="entityManagerFactoryBean"/>

</beans>